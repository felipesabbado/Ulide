// Generated by view binder compiler. Do not edit!
package com.example.ulide2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ulide2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainMenuBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final GridLayout Grid3Buttons;

  @NonNull
  public final ConstraintLayout MapLayout;

  @NonNull
  public final Button button14;

  @NonNull
  public final Button button4;

  @NonNull
  public final Button button6;

  private ActivityMainMenuBinding(@NonNull RelativeLayout rootView,
      @NonNull GridLayout Grid3Buttons, @NonNull ConstraintLayout MapLayout,
      @NonNull Button button14, @NonNull Button button4, @NonNull Button button6) {
    this.rootView = rootView;
    this.Grid3Buttons = Grid3Buttons;
    this.MapLayout = MapLayout;
    this.button14 = button14;
    this.button4 = button4;
    this.button6 = button6;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Grid3Buttons;
      GridLayout Grid3Buttons = ViewBindings.findChildViewById(rootView, id);
      if (Grid3Buttons == null) {
        break missingId;
      }

      id = R.id.MapLayout;
      ConstraintLayout MapLayout = ViewBindings.findChildViewById(rootView, id);
      if (MapLayout == null) {
        break missingId;
      }

      id = R.id.button14;
      Button button14 = ViewBindings.findChildViewById(rootView, id);
      if (button14 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button6;
      Button button6 = ViewBindings.findChildViewById(rootView, id);
      if (button6 == null) {
        break missingId;
      }

      return new ActivityMainMenuBinding((RelativeLayout) rootView, Grid3Buttons, MapLayout,
          button14, button4, button6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
